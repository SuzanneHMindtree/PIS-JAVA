<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.junfenglu</groupId>
    <artifactId>PISFX</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>PISFX</name>


  <developers>
        <developer>
            <id>9999999</id>
            <name>Junfeng Lu</name>
            <email>luis709394@gmail.com</email>
        </developer>
    </developers>

    <organization>
        <name>Concordia University</name>
    </organization>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                <!-- class that has the main method -->
        <mainClass>com.junfenglu.app.MainApp</mainClass>
        <!-- name appended to standard jar name to indicate shaded/executable version -->
        <shadedClassifierName>executable</shadedClassifierName>
    </properties>

    <dependencies>
          <!-- The libraries not included in Java SE that are required for this program -->
        <dependency>
            <!-- Additional GUI controls -->
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.20.8</version>
        </dependency>
        <dependency>
            <!-- Dialog controls -->
            <groupId>org.controlsfx</groupId>
            <artifactId>openjfx-dialogs</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.jodd</groupId>
            <artifactId>jodd-mail</artifactId>
            <version>3.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.jodd</groupId>
            <artifactId>jodd-log</artifactId>
            <version>3.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
        </dependency>
        <!--    <dependency> 
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.13</version>
        </dependency>        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    
        <dependency>
            <!-- MySQL database driver -->
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.33</version>
        </dependency>
        
    </dependencies>



     <build>
        <!-- Goals may be set in the IDE or the pom -->
        <!-- IDE goals override the defaultGoal -->
        <defaultGoal>clean compile package exec:java</defaultGoal>
        <resources>
            <!-- Normally resources are placed in src/main/resources. The following 
            resources settings tells Maven to include the indicated files from either 
            the java or resources folder -->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.fxml</include>
                    <include>**/*.css</include>
                    <include>**/*.png</include>
                </includes>
            </resource>
            <!-- As soon as you list a new resource folder the default is no longer 
            available. Therefore we need to add it back as a resource folder. -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!-- Actions that Maven can perform for you -->
            <plugin>
                <!-- Select the version of the compiler -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!-- sometimes the IDE does not reveal all the important warning -->
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <plugin>
                <!-- shade creates an executable jar with the main class showing in the 
                manifest file -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>${shadedClassifierName}</shadedClassifierName>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${mainClass}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- executes the program -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <!-- used by java goal -->
                            <mainClass>${mainClass}</mainClass>
                            <!-- Used by exec goal to execute the shaded jar rather than just 
                            the compiled classes -->
                            <executable>${java.home}/bin/java</executable>
                            <!-- Eclipse splits this line when file is formatted. Must be put 
                            back on one line. -->
                            <commandlineArgs>-jar ${project.build.directory}/${project.build.finalName}-${shadedClassifierName}.jar</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Executes JUnit tests and writes the results as an xml and txt file 
                Test classes must include one of the following in their name: Test* *Test 
                *TestCase -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
            </plugin>

        </plugins>
    </build>
</project>

